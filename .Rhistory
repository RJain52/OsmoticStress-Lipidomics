mydata_comp <- lipid_data
mydata_comp$`Total Lipid` <- rowSums(mydata_comp[,3:ncol(mydata_comp)], na.rm = T)
mydata_comp[,3:ncol(mydata_comp)] <-
mydata_comp[,3:ncol(mydata_comp)]/mydata_comp$`Total Lipid`
Z <- mydata_comp |>
select(!`Total Lipid`)
# Change all 0 values to NA
Z[Z==0] <- NA
Z <- Z |>
pivot_longer(-c(`Sample Number`, Condition),
names_to = "Lipid",
values_to = "signal")
Z <- Z |>
filter(Condition %in% c("1.02 OsM", "0.28 OsM")  # Change to desired groups
)
# Calculate fold changes; edit summarise function to select correct Conditions
volcano <- Z |>
drop_na() |>
group_by(Lipid) |>      # retain factor
summarise(FC = mean(signal[Condition == "1.02 OsM + 1mM GB"])/mean(signal[Condition == "0.28 OsM"])
) |>
ungroup()
# Calculate p-values for for each lipid, within each group
stat.test <- Z |>
group_by(Lipid) |>                # Grouping variables as above
t_test(signal ~ Condition) |>     # significance test (can also do wilcox_test)
mutate(log10_p = -log10(p)) |>    # transform p-values for plotting
ungroup()
# Add stats info to fold change
volcano <- left_join(volcano, stat.test,
by = c("Lipid")
)
# Create [factor] variable for lipid change based on p-value and direction of change
volcano$signif <- ifelse(volcano$p < 0.051 & volcano$FC > 1.0,
"Increased", "p>0.051")
volcano$signif <- ifelse(volcano$p < 0.051 & volcano$FC < 1.0,
"Decreased", volcano$signif)
volcano$signif <- factor(volcano$signif,
levels = c("p>0.051", "Increased", "Decreased")
)
# Create column to label significantly altered lipids
volcano$delabel <- ifelse(volcano$signif != "p>0.051",
paste0(volcano$Lipid),
NA)
# Reduce names to represent lipid classes
volcano$delabel <- gsub(" .*","", volcano$delabel)
volcano$delabel <- gsub("\\bFAHFA\\b","FA", volcano$delabel)
volcano$delabel <- factor(volcano$delabel)
# Transform fold change for plotting
volcano$FC <- log2(volcano$FC)
# Create scatterplot with fold change on x-axis, p-value on y-axis
# Shade significantly altered lipids by lipid class
p0 <- volcano |>
ggplot(aes(x=FC, y = log10_p,
col = delabel
)
) +
geom_point() +
scale_y_continuous(limits = c(0, 8),
expand = c(0.01,0)
) +
scale_x_continuous(limits = c(-5, 6)
) +
geom_vline(xintercept = 0,
linetype = "dashed",
linewidth = 0.5) +
geom_hline(yintercept = 1.301,            # dashed line for p=0.05
linetype = "dashed",
linewidth = 0.5
) +
annotate("text", label = "p=0.05",
x = 6,
y = 1.0,                         # text label for line signifying p-value = 0.05
size = 2.5,
vjust = -0.25,
colour = "black") +
scale_color_manual(values=c(mypal_bar[c(4, 5, 7, 9)],
"magenta", "black",
mypal_bar[c(2, 3, 1, 6, 8)]
),
name = "Lipid Class",                 # legend title
breaks = c("CL", "DG", "FA",
"HBMP", "LPC", "LPE",
"PA", "PE", "PG",
"PMeOH", "TG")
) +                                         # desired name in legend
ggtitle("Effect of high salt and GB") +
xlab("log2(Fold change [1.02 OsM + 1mM GB/0.28 OsM])") +        # Edit based on groups
ylab("-log10(p-value)") +
theme_bw(base_size = 14,
base_family = "sans",
base_line_size = 1
) +
theme(axis.text = element_text(size = 12),
axis.line = element_line(linetype = 0),
legend.position = "top"
)
p0
mydata_comp <- lipid_data
mydata_comp$`Total Lipid` <- rowSums(mydata_comp[,3:ncol(mydata_comp)], na.rm = T)
mydata_comp[,3:ncol(mydata_comp)] <-
mydata_comp[,3:ncol(mydata_comp)]/mydata_comp$`Total Lipid`
Z <- mydata_comp |>
select(!`Total Lipid`)
# Change all 0 values to NA
Z[Z==0] <- NA
Z <- Z |>
pivot_longer(-c(`Sample Number`, Condition),
names_to = "Lipid",
values_to = "signal")
Z <- Z |>
filter(Condition %in% c("1.02 OsM + 1mM GB", "0.28 OsM")  # Change to desired groups
)
# Calculate fold changes; edit summarise function to select correct Conditions
volcano <- Z |>
drop_na() |>
group_by(Lipid) |>      # retain factor
summarise(FC = mean(signal[Condition == "1.02 OsM + 1mM GB"])/mean(signal[Condition == "0.28 OsM"])
) |>
ungroup()
# Calculate p-values for for each lipid, within each group
stat.test <- Z |>
group_by(Lipid) |>                # Grouping variables as above
t_test(signal ~ Condition) |>     # significance test (can also do wilcox_test)
mutate(log10_p = -log10(p)) |>    # transform p-values for plotting
ungroup()
# Add stats info to fold change
volcano <- left_join(volcano, stat.test,
by = c("Lipid")
)
# Create [factor] variable for lipid change based on p-value and direction of change
volcano$signif <- ifelse(volcano$p < 0.051 & volcano$FC > 1.0,
"Increased", "p>0.051")
volcano$signif <- ifelse(volcano$p < 0.051 & volcano$FC < 1.0,
"Decreased", volcano$signif)
volcano$signif <- factor(volcano$signif,
levels = c("p>0.051", "Increased", "Decreased")
)
# Create column to label significantly altered lipids
volcano$delabel <- ifelse(volcano$signif != "p>0.051",
paste0(volcano$Lipid),
NA)
# Reduce names to represent lipid classes
volcano$delabel <- gsub(" .*","", volcano$delabel)
volcano$delabel <- gsub("\\bFAHFA\\b","FA", volcano$delabel)
volcano$delabel <- factor(volcano$delabel)
# Transform fold change for plotting
volcano$FC <- log2(volcano$FC)
# Create scatterplot with fold change on x-axis, p-value on y-axis
# Shade significantly altered lipids by lipid class
p0 <- volcano |>
ggplot(aes(x=FC, y = log10_p,
col = delabel
)
) +
geom_point() +
scale_y_continuous(limits = c(0, 8),
expand = c(0.01,0)
) +
scale_x_continuous(limits = c(-5, 6)
) +
geom_vline(xintercept = 0,
linetype = "dashed",
linewidth = 0.5) +
geom_hline(yintercept = 1.301,            # dashed line for p=0.05
linetype = "dashed",
linewidth = 0.5
) +
annotate("text", label = "p=0.05",
x = 6,
y = 1.0,                         # text label for line signifying p-value = 0.05
size = 2.5,
vjust = -0.25,
colour = "black") +
scale_color_manual(values=c(mypal_bar[c(4, 5, 7, 9)],
"magenta", "black",
mypal_bar[c(2, 3, 1, 6, 8)]
),
name = "Lipid Class",                 # legend title
breaks = c("CL", "DG", "FA",
"HBMP", "LPC", "LPE",
"PA", "PE", "PG",
"PMeOH", "TG")
) +                                         # desired name in legend
ggtitle("Effect of high salt and GB") +
xlab("log2(Fold change [1.02 OsM + 1mM GB/0.28 OsM])") +        # Edit based on groups
ylab("-log10(p-value)") +
theme_bw(base_size = 14,
base_family = "sans",
base_line_size = 1
) +
theme(axis.text = element_text(size = 12),
axis.line = element_line(linetype = 0),
legend.position = "top"
)
p0
ggsave(filename="output/volcano_salt_GB_effect.pdf",
plot = p0,
device = "pdf",
width = 14, height = 16,
units = "cm",
dpi = 600)
write_csv(volcano, file = "output/volcano_salt_GB_effect.csv")
rm(list=setdiff(ls(), c("lipid_data", "mydata", "mydata_comp",
"mypal_bar", "mypal_new")
)
)
# Required packages
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(Cairo)){install.packages("Cairo")}
if(!require(ggsci)){install.packages("ggsci")}
if(!require(scales)){install.packages("scales")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(rstatix)){install.packages("rstatix")}
if(!require(ggbreak)){install.packages("ggbreak")}
if(!require(factoextra)){install.packages("factoextra")}
if(!require(VennDiagram)){install.packages("VennDiagram")}
if(!require(rowr)){install.packages("rowr")}
# Load data
lipid_data <- read_csv("lipidomics_data.csv")
# Palettes used in the analysis
mypal_bar <- pal_igv('default', alpha = 1)(9)
mypal_new <- c("#00AFBB",  "#FC4E07", "green4")
mydata_comp <- lipid_data
mydata_comp$`Total Lipid` <- rowSums(mydata_comp[,3:ncol(mydata_comp)], na.rm = T)
mydata_comp[,3:ncol(mydata_comp)] <-
mydata_comp[,3:ncol(mydata_comp)]/mydata_comp$`Total Lipid`
Z <- mydata_comp |>
select(!`Total Lipid`)
write_csv(Z, file = "percent_comp.csv")
# Required packages
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(Cairo)){install.packages("Cairo")}
if(!require(ggsci)){install.packages("ggsci")}
if(!require(scales)){install.packages("scales")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(rstatix)){install.packages("rstatix")}
if(!require(ggbreak)){install.packages("ggbreak")}
if(!require(factoextra)){install.packages("factoextra")}
if(!require(VennDiagram)){install.packages("VennDiagram")}
if(!require(rowr)){install.packages("rowr")}
# Load data
lipid_data <- read_csv("lipidomics_data.csv")
# Palettes used in the analysis
mypal_bar <- pal_igv('default', alpha = 1)(9)
mypal_new <- c("#00AFBB",  "#FC4E07", "green4")
# Copy lipid data to new data frame
mydata <- lipid_data
# Calculate lipid class sums and create variables for them
mydata$`Total CL` <- rowSums(mydata[,grep('CL', colnames(mydata))], na.rm = T)
mydata$`Total DG` <- rowSums(mydata[,grep('\\bDG\\b', colnames(mydata))], na.rm = T)
mydata$`Total FFA` <- rowSums(mydata[,grep('FA', colnames(mydata))], na.rm = T)
mydata$`Total LPC` <- rowSums(mydata[,grep('LPC', colnames(mydata))], na.rm = T)
mydata$`Total LPE` <- rowSums(mydata[,grep('LPE', colnames(mydata))], na.rm = T)
mydata$`Total HBMP` <- rowSums(mydata[,grep('HBMP', colnames(mydata))], na.rm = T)
mydata$`Total PA` <- rowSums(mydata[,grep('\\bPA\\b', colnames(mydata))], na.rm = T)
mydata$`Total PC` <- rowSums(mydata[,grep('\\bPC\\b', colnames(mydata))], na.rm = T)
mydata$`Total PE` <- rowSums(mydata[,grep('\\bPE\\b', colnames(mydata))], na.rm = T)
mydata$`Total PEtOH` <- rowSums(mydata[,grep('\\bPEtOH\\b', colnames(mydata))], na.rm = T)
mydata$`Total PG` <- rowSums(mydata[,grep('\\bPG\\b', colnames(mydata))], na.rm = T)
mydata$`Total PMeOH` <- rowSums(mydata[,grep('\\bPMeOH\\b', colnames(mydata))], na.rm = T)
mydata$`Total TG` <- rowSums(mydata[,grep('TG', colnames(mydata))], na.rm = T)
# Calculate total quantified lipids by summing all classes
mydata$`Total Lipid` <- rowSums(mydata[,153:165], na.rm = T)
mdat <- mydata |>
select(`Sample Number`, Condition,
`Total CL`:`Total Lipid`)
mdat$Condition <- factor(mdat$Condition,
levels = c("0.28 OsM", "1.02 OsM", "1.02 OsM + 1mM GB")
)
mdat2 <- mdat |>
pivot_longer(-c(`Sample Number`, Condition),
names_to = "Lipid",
values_to = "value")
# Create variable for % contribution of each class to total lipid pool
mdat2 <- mdat2 |>
group_by(`Sample Number`, Condition) |>
mutate(norm_val = 100*value/value[Lipid == "Total Lipid"])
# Remove total lipid
mdat2 <- mdat2 |>
filter(!Lipid == "Total Lipid")
# Create two 'Class' variables for further editing
mdat2$Class <- as.character(mdat2$Lipid)
# Change Class variable to 'Other' for any classes with less than 1% contribution
mdat2$Class <- ifelse(mdat2$norm_val < 1,
"Other",
mdat2$Class)
# Also change other classes by name to 'Other'
mdat2$Class <- ifelse(mdat2$Class == "Total FFA",
"Other",
mdat2$Class)
mdat2$Class <- ifelse(mdat2$Class == "Total PMeOH",
"Other",
mdat2$Class)
mdat2$Class <- ifelse(mdat2$Class == "Total CL",
"Other",
mdat2$Class)
stat.test <- mdat2 %>%
group_by(Lipid) %>%
na.omit() %>%
t_test(value ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
View(stat.test)
View(mdat2)
mdat2 <- mdat2 |>
group_by(`Sample Number`, Class) |>
mutate(norm_val_new = sum(norm_val)
) |>
ungroup()
# Subset out the major lipid classes (PA, PE and PG) and Other (CL here)
mdat2 <- mdat2 |>
filter(Lipid %in% c("Total CL", "Total PA",
"Total PG", "Total PE")
)
# Order to plot classes
mdat2 <- mdat2 |>
mutate(Class = factor(Class,
levels = c("Other", "Total PA","Total PG",
"Total PE"
)
mdat2 <- mdat2 |>
mdat2 <- mdat2 |>
mutate(Class = factor(Class,
levels = c("Other", "Total PA","Total PG",
"Total PE"
)
)
)
# Calculate mean and sd of % contribution of each class
mdat2 <- mdat2 |>
group_by(Condition, Class) |>
summarise(mean_norm = mean(norm_val_new),
sd_norm = sd(norm_val_new),
.groups = 'drop')
View(mdat2)
mdat <- mydata |>
select(`Sample Number`, Condition,
`Total CL`:`Total Lipid`)
mdat$Condition <- factor(mdat$Condition,
levels = c("0.28 OsM", "1.02 OsM", "1.02 OsM + 1mM GB")
)
mdat2 <- mdat |>
pivot_longer(-c(`Sample Number`, Condition),
names_to = "Lipid",
values_to = "value")
# Create variable for % contribution of each class to total lipid pool
mdat2 <- mdat2 |>
group_by(`Sample Number`, Condition) |>
mutate(norm_val = 100*value/value[Lipid == "Total Lipid"])
# Remove total lipid
mdat2 <- mdat2 |>
filter(!Lipid == "Total Lipid")
# Create two 'Class' variables for further editing
mdat2$Class <- as.character(mdat2$Lipid)
# Change Class variable to 'Other' for any classes with less than 1% contribution
mdat2$Class <- ifelse(mdat2$norm_val < 1,
"Other",
mdat2$Class)
# Also change other classes by name to 'Other'
mdat2$Class <- ifelse(mdat2$Class == "Total FFA",
"Other",
mdat2$Class)
mdat2$Class <- ifelse(mdat2$Class == "Total PMeOH",
"Other",
mdat2$Class)
mdat2$Class <- ifelse(mdat2$Class == "Total CL",
"Other",
mdat2$Class)
stat.test <- mdat2 %>%
group_by(Lipid) %>%
na.omit() %>%
t_test(value ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
# Sum all lipid classes in 'Other'
mdat2 <- mdat2 |>
group_by(`Sample Number`, Class) |>
mutate(norm_val_new = sum(norm_val)
) |>
ungroup()
View(mdat2)
mdat <- mydata |>
select(`Sample Number`, Condition,
`Total CL`:`Total Lipid`)
mdat$Condition <- factor(mdat$Condition,
levels = c("0.28 OsM", "1.02 OsM", "1.02 OsM + 1mM GB")
)
mdat2 <- mdat |>
pivot_longer(-c(`Sample Number`, Condition),
names_to = "Lipid",
values_to = "value")
# Create variable for % contribution of each class to total lipid pool
mdat2 <- mdat2 |>
group_by(`Sample Number`, Condition) |>
mutate(norm_val = 100*value/value[Lipid == "Total Lipid"])
# Remove total lipid
mdat2 <- mdat2 |>
filter(!Lipid == "Total Lipid")
# Create two 'Class' variables for further editing
mdat2$Class <- as.character(mdat2$Lipid)
# Change Class variable to 'Other' for any classes with less than 1% contribution
mdat2$Class <- ifelse(mdat2$norm_val < 1,
"Other",
mdat2$Class)
# Also change other classes by name to 'Other'
mdat2$Class <- ifelse(mdat2$Class == "Total FFA",
"Other",
mdat2$Class)
mdat2$Class <- ifelse(mdat2$Class == "Total PMeOH",
"Other",
mdat2$Class)
mdat2$Class <- ifelse(mdat2$Class == "Total CL",
"Other",
mdat2$Class)
stat.test <- mdat2 %>%
group_by(Lipid) %>%
na.omit() %>%
t_test(value ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
# Sum all lipid classes in 'Other'
mdat2 <- mdat2 |>
group_by(`Sample Number`, Class) |>
mutate(norm_val_new = sum(norm_val)
) |>
ungroup()
View(mdat2)
test <- mdat2 |> filter(Lipid == "Total PG")
test <- mdat2 |> filter(!Condition == "1.02 OsM + 1mM GB")
View(test)
View(test)
test <- mdat2 |> filter(Class == "Total PG")
View(test)
test <- test |> filter(!Condition == "1.02 OsM + 1mM GB")
View(test)
t.test(test$norm_val_new~test$Condition)
View(mdat2)
stat.test <- mdat2 %>%
group_by(Lipid) %>%
na.omit() %>%
t_test(norm_val ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
View(stat.test)
write_csv(stat.test, file = "output/STable2_pval.csv")
mdat <- mydata |>
select(`Sample Number`, Condition,
`Total CL`:`Total Lipid`)
mdat$Condition <- factor(mdat$Condition,
levels = c("0.28 OsM", "1.02 OsM", "1.02 OsM + 1mM GB")
)
mdat2 <- mdat |>
pivot_longer(-c(`Sample Number`, Condition),
names_to = "Lipid",
values_to = "value")
# Create variable for % contribution of each class to total lipid pool
mdat2 <- mdat2 |>
group_by(`Sample Number`, Condition) |>
mutate(norm_val = 100*value/value[Lipid == "Total Lipid"])
# Remove total lipid
mdat2 <- mdat2 |>
filter(!Lipid == "Total Lipid")
# Create two 'Class' variables for further editing
mdat2$Class <- as.character(mdat2$Lipid)
# Change Class variable to 'Other' for any classes with less than 1% contribution
mdat2$Class <- ifelse(mdat2$norm_val < 1,
"Other",
mdat2$Class)
# Also change other classes by name to 'Other'
mdat2$Class <- ifelse(mdat2$Class == "Total FFA",
"Other",
mdat2$Class)
mdat2$Class <- ifelse(mdat2$Class == "Total PMeOH",
"Other",
mdat2$Class)
mdat2$Class <- ifelse(mdat2$Class == "Total CL",
"Other",
mdat2$Class)
stat.test <- mdat2 %>%
group_by(Lipid) %>%
na.omit() %>%
t_test(norm_val ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
# Sum all lipid classes in 'Other'
mdat2 <- mdat2 |>
group_by(`Sample Number`, Class) |>
mutate(norm_val_new = sum(norm_val)
) |>
ungroup()
# Subset out the major lipid classes (PA, PE and PG) and Other (CL here)
mdat2 <- mdat2 |>
filter(Lipid %in% c("Total CL", "Total PA",
"Total PG", "Total PE")
)
# Order to plot classes
mdat2 <- mdat2 |>
mutate(Class = factor(Class,
levels = c("Other", "Total PA","Total PG",
"Total PE"
)
)
)
View(mdat2)
stat.test <- mdat2 %>%
group_by(Lipid) %>%
na.omit() %>%
t_test(norm_val_new ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
View(stat.test)
